{"version":3,"sources":["containers/wrapper/Wrapper.jsx","pages/transfers/TableItem.jsx","pages/transfers/Table.jsx","pages/transfers/Transfers.jsx","store/actions/transfers.jsx"],"names":["Wrapper","props","className","children","TableItem","amount","updated_at","date","moment","format","time","Table","items","i18n","t","map","item","index","key","mapDispatchToProps","getBalanceDetails","dispatch","a","axios","get","data","success","type","GET_BALANCE_DETAILS","code","IS_LOGGED_IN","localStorage","removeItem","defaults","headers","common","TOGGLE_ERROR_MODAL","message","response","status","LOG_OUT","CLEAR_NOTIFICATION","clear","Promise","reject","getAllTransfers","limit","page","GET_ALL_TRANSFERS","searchTransfers","text","url","parseInt","day","month","year","post","SEARCH_TRANSFERS","connect","allTransfers","balanceDetails","withRouter","images","transfers","filledLeftArrow","unfilledLeftArrow","filledRightArrow","unfilledRightArrow","useState","setTransfers","searchType","setSearchType","useForm","register","handleSubmit","watch","errors","useEffect","nextPage","useCallback","hasNextPage","currentPage","prevPage","hasPrevPage","number","handleSearchSelect","e","target","value","latest_total_amount","latest_transport_cost","latest_neto_amount","current_balance","all_time_earning","onSubmit","search","onChange","defaultValue","name","ref","required","placeholder","onClick","src","lastPage","is-active"],"mappings":"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","file":"static/js/28.a76c64f3.chunk.js","sourcesContent":["import React from 'react';\nimport './wrapper.scss';\n\nconst Wrapper = (props) => {\n    return (\n        <div className=\"strike-wrapper\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Wrapper;","import React from 'react';\nimport './transfers.scss';\nimport moment from 'moment';\n\n\nconst TableItem = ({ amount, updated_at }) => {\n    const date = moment(updated_at).format('DD/MM/YYYY');\n    const time = moment(updated_at).format('HH:MM:ss');\n    return (\n        <div className=\"strike-transfers__table-item\">\n            <div className=\"strike-transfers__table-item-container\">\n                <div className=\"strike-transfers__table-item-container-text\">{amount}â‚¬</div>\n            </div>\n            <div className=\"strike-transfers__table-item-container\">\n                <div className=\"strike-transfers__table-item-container-text\">{date}</div>\n            </div>\n            <div className=\"strike-transfers__table-item-container\">\n                <div className=\"strike-transfers__table-item-container-text\">{time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default TableItem","import React from 'react';\nimport i18n from '../../services/locales/i18n';\nimport './transfers.scss';\nimport TableItem from './TableItem';\n\n\nconst Table = ({ items }) => {\n    return (\n        <div className=\"strike-transfers__table\">\n            <div className=\"strike-transfers__table-header\">\n                <div className=\"strike-transfers__table-header-item\">\n                    <div className=\"strike-transfers__table-header-item-text\">{i18n.t('transfers.amount')}</div>\n                </div>\n                <div className=\"strike-transfers__table-header-item\">\n                    <div className=\"strike-transfers__table-header-item-text\">{i18n.t('transfers.date')}</div>\n                </div>\n                <div className=\"strike-transfers__table-header-item\">\n                    <div className=\"strike-transfers__table-header-item-text\">{i18n.t('transfers.time')}</div>\n                </div>\n            </div>\n            {items && items.map((item, index) => {\n                return <TableItem key={index} {...item} />\n            })}\n        </div>\n    )\n}\n\nexport default Table;","import React, { useEffect, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Wrapper from '../../containers/wrapper/Wrapper';\nimport images from '../../assets/images';\nimport i18n from '../../services/locales/i18n';\nimport './transfers.scss';\nimport { getAllTransfers, getBalanceDetails, searchTransfers } from '../../store/actions/transfers';\nimport { useForm } from \"react-hook-form\";\nimport Table from './Table';\nimport moment from 'moment';\n\nconst Transfers = (props) => {\n    const { filledLeftArrow, unfilledLeftArrow, filledRightArrow, unfilledRightArrow } = images.transfers;\n    const [transfers, setTransfers] = useState(props.allTransfers);\n    const [searchType, setSearchType] = useState('date')\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = ({ type, search }) => {\n        props.searchTransfers(type, search)\n    };\n\n    useEffect(() => {\n        props.getBalanceDetails();\n        props.getAllTransfers(10, 1);\n    }, [])\n    useEffect(() => { setTransfers(props.allTransfers); }, [props.allTransfers]);\n\n    const nextPage = useCallback(() => { if (transfers.hasNextPage) props.getAllTransfers(10, transfers.currentPage + 1) }, [transfers]);\n    const prevPage = useCallback(() => { if (transfers.hasPrevPage) props.getAllTransfers(10, transfers.currentPage - 1) }, [transfers]);\n    const number = useCallback((page) => { props.getAllTransfers(10, page) }, [transfers]);\n\n    const handleSearchSelect = useCallback((e) => { setSearchType(e.target.value) }, [searchType])\n    return (\n        <Wrapper>\n            <div className=\"strike-transfers-top\">\n                <div className=\"strike-transfers-top__left\">\n                    <div className=\"strike-transfers-top__left-title\">{i18n.t('transfers.latestEarning')}</div>\n                    <div className=\"strike-transfers-top__left-middle\">\n                        <div className=\"strike-transfers-top__left-middle-left\">\n                            <div className=\"strike-transfers-top__left-subtitle\">{i18n.t('transfers.totalAmount')}</div>\n                            <div className=\"strike-transfers-top__left-middle-left-subtitle\">{props.balanceDetails && props.balanceDetails.latest_total_amount}â‚¬</div>\n                        </div>\n                        <div className=\"strike-transfers-top__left-middle-right\">\n                            <div className=\"strike-transfers-top__left-subtitle\">{i18n.t('transfers.transportCost')}</div>\n                            <div className=\"strike-transfers-top__left-middle-right-subtitle\">{props.balanceDetails && props.balanceDetails.latest_transport_cost}â‚¬</div>\n                        </div>\n                    </div>\n                    <div className=\"strike-transfers-top__left-subtitle text-center\">{i18n.t('transfers.netoAmount')}</div>\n                    <div className=\"strike-transfers-top__left-price text-center\">{props.balanceDetails && props.balanceDetails.latest_neto_amount}â‚¬</div>\n                </div>\n                <div className=\"strike-transfers-top__middle\">\n                    <div className=\"strike-transfers-top__middle-title\">{i18n.t('transfers.currentBalance')}</div>\n                    <div className=\"strike-transfers-top__middle-subtitle\">{i18n.t('transfers.totalAmount')}</div>\n                    <div className=\"strike-transfers-top__middle-price\">{props.balanceDetails && props.balanceDetails.current_balance}â‚¬</div>\n                </div>\n                <div className=\"strike-transfers-top__right\">\n                    <div className=\"strike-transfers-top__right-title\">{i18n.t('transfers.allTimeEarning')}</div>\n                    <div className=\"strike-transfers-top__right-subtitle\">{i18n.t('transfers.totalAmount')}</div>\n                    <div className=\"strike-transfers-top__right-price\">{props.balanceDetails && props.balanceDetails.all_time_earning}â‚¬</div>\n                </div>\n            </div>\n            <div className=\"strike-transfers\">\n                <form onSubmit={handleSubmit(onSubmit)} className=\"strike-transfers__search\">\n                    <select onChange={handleSearchSelect} defaultValue={searchType} name=\"type\" ref={register({ required: true })} className=\"strike-transfers__search-select\">\n                        <option value=\"date\">{i18n.t('transfers.date')}</option>\n                        <option value=\"amount\">{i18n.t('transfers.amount')}</option>\n                    </select>\n                    <input defaultValue={searchType === 'date' ? moment().format('yyyy-MM-DD') : ''} type={searchType === 'date' ? 'date' : 'text'} name=\"search\" ref={register({ required: true })} placeholder={i18n.t('transfers.searchPlaceholder')} className=\"strike-transfers__search-input\" />\n                    <button type=\"submit\" className=\"strike-transfers__search-button\">{i18n.t('transfers.search')}</button>\n                </form>\n                <Table items={transfers.data} />\n                <div className=\"strike-transfers__pagination\">\n                    <img onClick={prevPage} src={transfers.hasPrevPage ? filledLeftArrow : unfilledLeftArrow} className='strike-transfers__pagination-leftarrow' />\n                    {transfers && transfers.lastPage.map(item => {\n                        return <div onClick={() => number(item)} is-active={item === transfers.currentPage ? 'true' : 'false'} key={item} className=\"strike-transfers__pagination-number\">{item}</div>\n                    })}\n                    <img onClick={nextPage} src={transfers.hasNextPage ? filledRightArrow : unfilledRightArrow} className='strike-transfers__pagination-rightarrow' />\n                </div>\n            </div>\n        </Wrapper>\n    )\n}\n\nconst mapStateToProps = ({ allTransfers, balanceDetails }) => ({ allTransfers, balanceDetails });\nconst mapDispatchToProps = { getBalanceDetails, getAllTransfers, searchTransfers };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Transfers));","import {\n    GET_ALL_TRANSFERS, GET_SELECTED_TRANSFERS, GET_BALANCE_DETAILS, IS_LOGGED_IN, SEARCH_TRANSFERS, TOGGLE_ERROR_MODAL, LOG_OUT, CLEAR_NOTIFICATION\n} from '../actionTypes';\nimport axios from 'axios';\nimport moment from 'moment';\n\nexport const getAllTransfers = (limit, page) => async (dispatch) => {\n    try {\n        const data = await axios.get(`transfers/paginate/${limit}?page=${page}`);\n        if (data.status === 200) {\n            dispatch({ type: GET_ALL_TRANSFERS, data: data.data })\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        if (e?.response?.status === 401) {\n            dispatch({ type: LOG_OUT });\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            dispatch({ type: CLEAR_NOTIFICATION })\n            localStorage.clear();\n        }\n        return Promise.reject(e);\n    }\n}\n\nexport const searchTransfers = (type, text) => async (dispatch) => {\n    try {\n        let url = '';\n        if (type === 'amount') url = `/transfers/search/amount?amount=${parseInt(text)}`;\n        if (type === 'date') {\n            const day = moment(text).format('DD');\n            const month = moment(text).format('MM');\n            const year = moment(text).format('YYYY');\n            url = `/transfers/search/date?day=${parseInt(day)}&month=${parseInt(month)}&year=${parseInt(year)}`;\n        }\n        const { data } = await axios.post(url);\n        if (data.success) {\n            dispatch({ type: SEARCH_TRANSFERS, data: data.data })\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        if (e?.response?.status === 401) {\n            dispatch({ type: LOG_OUT });\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            dispatch({ type: CLEAR_NOTIFICATION })\n            localStorage.clear();\n        }\n        return Promise.reject(e);\n    }\n}\n\nexport const getTransfer = (id) => async (dispatch) => {\n    try {\n        const { data } = await axios.get(`/transfers/${id}`);\n        if (data.success) {\n            dispatch({ type: GET_SELECTED_TRANSFERS, data });\n        } else if (data.code === 403) {\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        if (e?.response?.status === 401) {\n            dispatch({ type: LOG_OUT });\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            dispatch({ type: CLEAR_NOTIFICATION })\n            localStorage.clear();\n        }\n        return Promise.reject(e);\n    }\n}\n\nexport const getBalanceDetails = () => async (dispatch) => {\n    try {\n        const { data } = await axios.get('/balance');\n        if (data.success) {\n            dispatch({ type: GET_BALANCE_DETAILS, data: data.data });\n        } else if (data.code === 403) {\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        if (e?.response?.status === 401) {\n            dispatch({ type: LOG_OUT });\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            dispatch({ type: CLEAR_NOTIFICATION })\n            localStorage.clear();\n        }\n        return Promise.reject(e);\n    }\n}"],"sourceRoot":""}