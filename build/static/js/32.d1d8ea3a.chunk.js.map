{"version":3,"sources":["pages/login/Login.jsx"],"names":["mapDispatchToProps","authenticate","login","connect","loggedIn","isLoggedIn","withRouter","useState","isEmailValid","validateEmail","logoWithoutText","images","useForm","register","handleSubmit","watch","errors","useEffect","test","to","className","src","i18n","t","style","display","flexDirection","onSubmit","email","password","has-error","name","ref","required","type","placeholder"],"mappings":"8MAkDMA,EAAqB,CAAEC,iBAAcC,WAC5BC,uBAFS,SAAC,GAAD,MAA+B,CAAEC,SAAjC,EAAGA,SAAwCC,WAA3C,EAAaA,cAEGL,EAAzBG,CAA6CG,aAxC9C,SAAC,GAAmD,IAAjDJ,EAAgD,EAAhDA,MAA+BG,GAAiB,EAAzCD,SAAyC,EAA/BH,aAA+B,EAAjBI,YAAiB,EACvBE,oBAAS,GADc,mBACtDC,EADsD,KACxCC,EADwC,KAErDC,EAAoBC,IAApBD,gBAFqD,EAGXE,cAA1CC,EAHqD,EAGrDA,SAAUC,EAH2C,EAG3CA,aAAcC,EAH6B,EAG7BA,MAAOC,EAHsB,EAGtBA,OAYvC,OALAC,qBAAU,YAE2B,IADvB,gDACFC,KAAKH,EAAM,UAAqBN,GAAc,GACjDA,GAAc,KACpB,CAACM,EAAM,WAENV,EAEI,kBAAC,IAAD,CAAUc,GAAG,MAEb,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,4BAA4BC,IAAKX,IAChD,yBAAKU,UAAU,8BAA8BE,IAAKC,EAAE,iBAExD,yBAAKH,UAAU,wBACX,0BAAMI,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAAYC,SAAUb,GAtBpE,SAAC,GAAyB,IAAvBc,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClBb,EAAOY,OAAUZ,EAAOa,WAAYrB,GACrCN,EAAM,CAAE0B,QAAOC,iBAqBH,yBAAKT,UAAU,8BAA8BE,IAAKC,EAAE,qBACpD,2BAAOO,YAAYtB,EAAwB,QAAT,OAAkBuB,KAAK,QAAQC,IAAKnB,EAAS,CAAEoB,UAAU,IAASb,UAAU,6BAA6Bc,KAAK,OAAOC,YAAab,IAAKC,EAAE,4BAC3K,yBAAKH,UAAU,8BAA8BE,IAAKC,EAAE,wBACpD,2BAAOO,YAAWd,EAAOa,SAAW,OAAS,QAASE,KAAK,WAAWC,IAAKnB,EAAS,CAAEoB,UAAU,IAASb,UAAU,6BAA6Bc,KAAK,WAAWC,YAAab,IAAKC,EAAE,+BACpL,4BAAQW,KAAK,SAASd,UAAU,+BAA+BE,IAAKC,EAAE,8B","file":"static/js/32.d1d8ea3a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { authenticate } from '../../store/actions/authenticate.action';\nimport { login } from '../../store/actions/authorization';\nimport { useForm } from \"react-hook-form\";\nimport i18n from '../../services/locales/i18n';\nimport './login.scss';\nimport images from '../../assets/images';\n\nconst Login = ({ login, loggedIn, authenticate, isLoggedIn }) => {\n    const [isEmailValid, validateEmail] = useState(false);\n    const { logoWithoutText } = images;\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = ({ email, password }) => {\n        if (!errors.email && !errors.password && isEmailValid) {\n            login({ email, password })\n        }\n    };\n\n    useEffect(() => {\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        if (reg.test(watch('email')) === false) validateEmail(false);\n        else validateEmail(true);\n    }, [watch('email')])\n    return (\n        isLoggedIn\n            ?\n            <Redirect to='/' />\n            :\n            <div className=\"strike-login\">\n                <div className=\"strike-login__header\">\n                    <img className=\"strike-login__header-logo\" src={logoWithoutText} />\n                    <div className=\"strike-login__header-title\">{i18n.t('login.title')}</div>\n                </div>\n                <div className=\"strike-login__inputs\">\n                    <form style={{ display: 'flex', flexDirection: 'column' }} onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"strike-login__inputs-label\">{i18n.t('login.emailLabel')}</div>\n                        <input has-error={!isEmailValid ? 'true' : 'false'} name=\"email\" ref={register({ required: true })} className=\"strike-login__inputs-input\" type=\"text\" placeholder={i18n.t('login.emailPlaceholder')} />\n                        <div className=\"strike-login__inputs-label\">{i18n.t('login.passwordLabel')}</div>\n                        <input has-error={errors.password ? \"true\" : 'false'} name=\"password\" ref={register({ required: true })} className=\"strike-login__inputs-input\" type=\"password\" placeholder={i18n.t('login.passwordPlaceholder')} />\n                        <button type=\"submit\" className=\"strike-login__inputs-button\">{i18n.t('login.loginButton')}</button>\n                    </form>\n                </div>\n            </div>\n    )\n}\n\nconst mapStateToProps = ({ loggedIn, isLoggedIn }) => ({ loggedIn, isLoggedIn });\nconst mapDispatchToProps = { authenticate, login };\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));"],"sourceRoot":""}