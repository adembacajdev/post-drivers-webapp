{"version":3,"sources":["pages/orders/Context.jsx","pages/orders/TableItem.jsx","pages/orders/Table.jsx","pages/orders/Orders.jsx"],"names":["Context","createContext","TableItem","newStatus","statusColor","id","serial_number","status","updated_at","deleteItem","price","client","printOne","item","useContext","selected","setSelected","useState","checked","setChecked","history","useHistory","threePoints","images","orders","date","moment","format","time","navigate","push","useEffect","deletedCheck","filter","el","length","className","onChange","value","type","onClick","is-responsive","first_name","city","src","localStorage","setItem","window","open","location","host","i18n","t","Table","items","selectedAll","selectAll","selectAllOrders","tableArrow","useCallback","style","marginLeft","map","index","key","mapDispatchToProps","getAllOrders","deleteOrder","printOneOrder","getOrdersPaginated","searchOrders","printSelectedOrders","deleteOrders","connect","allOrders","ordersPaginated","deletedOrder","printOrder","withRouter","props","title","setTitle","setOrders","searchSelect","setSearchSelect","filledLeftArrow","unfilledLeftArrow","filledRightArrow","unfilledRightArrow","useForm","register","handleSubmit","errors","state","reload","newArray","data","forEach","elem","nextPage","hasNextPage","currentPage","prevPage","hasPrevPage","number","page","handleSearchSelect","e","target","Provider","onSubmit","search","defaultValue","name","ref","required","placeholder","lastPage","is-active","disabled","stringSelected","JSON","stringify"],"mappings":"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","file":"static/js/33.c0815df9.chunk.js","sourcesContent":["import React,{createContext} from 'react';\r\n\r\nconst Context = createContext(null);\r\n\r\nexport default Context;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport images from '../../assets/images';\r\nimport i18n from '../../services/locales/i18n';\r\nimport './orders.scss';\r\nimport moment from 'moment';\r\nimport Context from './Context';\r\n\r\nconst TableItem = ({ id, serial_number, status, updated_at, deleteItem, price, client, printOne, item }) => {\r\n    const { selected, setSelected } = useContext(Context);\r\n    const [checked, setChecked] = useState(false)\r\n    const history = useHistory();\r\n    const { threePoints } = images.orders;\r\n    const date = moment(updated_at).format('DD/MM/YYYY');\r\n    const time = moment(updated_at).format('HH:mm:ss');\r\n\r\n    let newStatus;\r\n    let statusColor;\r\n    switch (status) {\r\n        case 'pending':\r\n            newStatus = status;\r\n            statusColor = status;\r\n            break;\r\n        case 'ongoing':\r\n            newStatus = status;\r\n            statusColor = status;\r\n            break;\r\n        case 'cancelled':\r\n            newStatus = status;\r\n            statusColor = status;\r\n            break;\r\n        case 'completed':\r\n            newStatus = status;\r\n            statusColor = status;\r\n            break;\r\n        case 'archived':\r\n            newStatus = 'archived';\r\n            statusColor = 'archived';\r\n            break;\r\n        case 'archived:cancelled':\r\n            newStatus = 'cancelled';\r\n            statusColor = 'archived';\r\n            break;\r\n        case 'archived:completed':\r\n            newStatus = 'completed';\r\n            statusColor = 'archived';\r\n            break;\r\n    }\r\n\r\n    const deleteThisItem = () => deleteItem(id);\r\n    const navigate = () => history.push('/order', { id })\r\n    const printOrder = () => {\r\n        localStorage.setItem('printOne', id)\r\n        window.open(`http://${window.location.host}/print/one`, 'Print Orders') //this should be https://\r\n    };\r\n    const check = () => setChecked(!checked);\r\n    useEffect(() => {\r\n        if (checked) setSelected([...selected, id])\r\n        else if (!checked) {\r\n            const deletedCheck = selected.filter(el => el !== id);\r\n            setSelected(deletedCheck);\r\n        }\r\n    }, [checked]);\r\n\r\n    useEffect(() => {\r\n        const iAmSelected = selected.filter(item => item === id);\r\n        if (iAmSelected.length === 0) { setChecked(false) }\r\n        else { setChecked(true) }\r\n    }, [selected])\r\n    return (\r\n        <div className=\"strike-orders__table-item\">\r\n            <div className=\"strike-orders__table-item-container\">\r\n                <input onChange={check} value={checked} checked={checked} className=\"strike-orders__table-item-container-checkbox\" type=\"checkbox\" />\r\n                <div className=\"strike-orders__table-item-container-text\">{serial_number}</div>\r\n            </div>\r\n            <div onClick={navigate} className=\"strike-orders__table-item-container\">\r\n                <div className={statusColor} />\r\n                <div className=\"strike-orders__table-item-container-text\">{newStatus}</div>\r\n            </div>\r\n            <div onClick={navigate} className=\"strike-orders__table-item-container\">\r\n                <div className=\"strike-orders__table-item-container-text\">{price}€</div>\r\n            </div>\r\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-orders__table-item-container\">\r\n                <div className=\"strike-orders__table-item-container-text\">{date}</div>\r\n            </div>\r\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-orders__table-item-container\">\r\n                <div className=\"strike-orders__table-item-container-text\">{time}</div>\r\n            </div>\r\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-orders__table-item-container\">\r\n                <div className=\"strike-orders__table-item-container-text\">{client.first_name}</div>\r\n            </div>\r\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-orders__table-item-container centered\">\r\n                <div className=\"strike-orders__table-item-container-text\">{client.city}</div>\r\n            </div>\r\n            <div is-responsive=\"true\" className=\"strike-orders__table-item-container centered\">\r\n                <div className=\"dropdown\">\r\n                    <img className=\"strike-orders__table-item-container-dots\" src={threePoints} />\r\n                    <div className=\"dropdown-content\">\r\n                        <div onClick={printOrder} className=\"dropdown-content-text\">{i18n.t('orders.print')}</div>\r\n                        <div onClick={deleteThisItem} className=\"dropdown-content-text\">{i18n.t('orders.delete')}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableItem;","import React from 'react';\r\nimport images from '../../assets/images';\r\nimport i18n from '../../services/locales/i18n';\r\nimport './orders.scss';\r\nimport TableItem from './TableItem';\r\nimport Context from './Context';\r\nimport { useContext, useCallback } from 'react';\r\n\r\nconst Table = ({ items, deleteItem, printOne }) => {\r\n    const { selectedAll, selectAll } = useContext(Context);\r\n    const { tableArrow } = images.orders;\r\n    const selectAllOrders = useCallback(() => { selectAll(!selectedAll) }, [selectedAll]);\r\n    return (\r\n        <div className=\"strike-orders__table\">\r\n            <div className=\"strike-orders__table-header\">\r\n                <div className=\"strike-orders__table-header-item\">\r\n                    <input type=\"checkbox\" onChange={selectAllOrders} value={selectedAll} checked={selectedAll} />\r\n                    <div style={{marginLeft: 15}} className=\"strike-orders__table-header-item-text\">{i18n.t('orders.serialNumber')}</div>\r\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\r\n                </div>\r\n                <div className=\"strike-orders__table-header-item\">\r\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.status')}</div>\r\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\r\n                </div>\r\n                <div className=\"strike-orders__table-header-item\">\r\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.unitedPrice')}</div>\r\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\r\n                </div>\r\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item\">\r\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.date')}</div>\r\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\r\n                </div>\r\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item\">\r\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.time')}</div>\r\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\r\n                </div>\r\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item\">\r\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.customerName')}</div>\r\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\r\n                </div>\r\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item centered\">\r\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.city')}</div>\r\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\r\n                </div>\r\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item centered\">\r\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.actions')}</div>\r\n                </div>\r\n            </div>\r\n            {items && items.map((item, index) => {\r\n                return <TableItem item={item} printOne={printOne} deleteItem={deleteItem} {...item} key={index} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Wrapper from '../../containers/wrapper/Wrapper';\r\nimport images from '../../assets/images';\r\nimport i18n from '../../services/locales/i18n';\r\nimport './orders.scss';\r\nimport {\r\n    getAllOrders, deleteOrder, printOneOrder, getOrdersPaginated, searchOrders, printSelectedOrders, deleteOrders\r\n} from '../../store/actions/orders';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Context from './Context';\r\nimport Table from './Table';\r\nimport moment from 'moment';\r\n\r\nconst Orders = (props) => {\r\n    const [title, setTitle] = useState(i18n.t('orders.allOrders'));\r\n    const [orders, setOrders] = useState(props.ordersPaginated);\r\n    const [selected, setSelected] = useState([]);\r\n    const [selectedAll, selectAll] = useState(false)\r\n    const [searchSelect, setSearchSelect] = useState('serial_number');\r\n    const { filledLeftArrow, unfilledLeftArrow, filledRightArrow, unfilledRightArrow } = images.orders;\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = ({ type, search }) => { props.searchOrders(type, search); };\r\n\r\n    useEffect(() => {\r\n        props.getOrdersPaginated(10, 1)\r\n        if (props.location.state && props.location.state.title) setTitle(props.location.state.title);\r\n    }, [])\r\n    useEffect(() => { if (props.deletedOrder) window.location.reload() }, [props.deletedOrder])\r\n    useEffect(() => {\r\n        setOrders(props.ordersPaginated);\r\n        selectAll(false);\r\n        setSelected([])\r\n    }, [props.ordersPaginated]);\r\n    useEffect(() => {\r\n        if (selectedAll) {\r\n            let newArray = [];\r\n            orders.data.forEach(elem => {\r\n                newArray.push(elem.id)\r\n            })\r\n            setSelected(newArray)\r\n        } else {\r\n            setSelected([])\r\n        }\r\n    }, [selectedAll])\r\n\r\n    const deleteSelectedOrders = () => {\r\n        props.deleteOrders(selected);\r\n        selectAll(false);\r\n        setSelected([]);\r\n    }\r\n    const printSelectedOrd = () => {\r\n        const stringSelected = JSON.stringify(selected);\r\n        localStorage.setItem('printMultiple', stringSelected);\r\n        window.open(`http://${window.location.host}/print/multiple`, 'Print Orders') //this should be https://\r\n    }\r\n\r\n    const nextPage = useCallback(() => { if (orders.hasNextPage) props.getOrdersPaginated(10, orders.currentPage + 1) }, [orders]);\r\n    const prevPage = useCallback(() => { if (orders.hasPrevPage) props.getOrdersPaginated(10, orders.currentPage - 1) }, [orders]);\r\n    const number = useCallback((page) => { props.getOrdersPaginated(10, page) }, [orders]);\r\n\r\n    const handleSearchSelect = useCallback((e) => { setSearchSelect(e.target.value) }, [searchSelect])\r\n\r\n    return (\r\n        <Context.Provider value={{ selected, setSelected, selectedAll, selectAll }}>\r\n            <Wrapper>\r\n                <div className=\"strike-orders\">\r\n                    <div className=\"strike-orders__header\">\r\n                        <div className=\"strike-orders__header-left\">\r\n                            <div className=\"strike-orders__header-left-text\">{title}</div>\r\n                        </div>\r\n                        <div className=\"strike-orders__header-right\">\r\n                        </div>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"strike-orders__search\">\r\n                        <select defaultValue={searchSelect} onChange={handleSearchSelect} name=\"type\" ref={register({ required: true })} className=\"strike-orders__search-select\">\r\n                            <option value=\"serial_number\">{i18n.t('orders.serialNumber')}</option>\r\n                            <option value=\"customer_name\">{i18n.t('orders.customerName')}</option>\r\n                            <option value=\"city\">{i18n.t('orders.city')}</option>\r\n                            <option value=\"status\">{i18n.t('orders.status')}</option>\r\n                            <option value=\"date\">{i18n.t('orders.date')}</option>\r\n                        </select>\r\n                        <input defaultValue={searchSelect === 'date' ? moment().format('yyyy-MM-DD') : ''} type={searchSelect === 'date' ? 'date' : 'text'} name=\"search\" ref={register({ required: true })} placeholder={i18n.t('orders.searchPlaceholder')} className=\"strike-orders__search-input\" />\r\n                        <button type=\"submit\" className=\"strike-orders__search-button\">{i18n.t('orders.search')}</button>\r\n                    </form>\r\n                    <Table printOne={props.printOneOrder} deleteItem={props.deleteOrder} items={orders && orders.data} />\r\n                    <div className=\"strike-orders__pagination\">\r\n                        <img onClick={prevPage} src={orders.hasPrevPage ? filledLeftArrow : unfilledLeftArrow} className='strike-orders__pagination-leftarrow' />\r\n                        {orders && orders.lastPage.map(item => {\r\n                            return <div onClick={() => number(item)} is-active={item === orders.currentPage ? 'true' : 'false'} key={item} className=\"strike-orders__pagination-number\">{item}</div>\r\n                        })}\r\n                        <img onClick={nextPage} src={orders.hasNextPage ? filledRightArrow : unfilledRightArrow} className='strike-orders__pagination-rightarrow' />\r\n                    </div>\r\n                    <div className=\"strike-orders__footerbuttons\">\r\n                        <button onClick={deleteSelectedOrders} disabled={selected.length ? false : true} className=\"strike-orders__delete-selected\">{i18n.t('orders.deleteOrders')}</button>\r\n                        <button onClick={printSelectedOrd} disabled={selected.length ? false : true} className=\"strike-orders__print-selected\">{i18n.t('orders.printSelected')}</button>\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    allOrders, ordersPaginated, deletedOrder, printOrder\r\n}) => ({\r\n    allOrders, ordersPaginated, deletedOrder, printOrder\r\n});\r\nconst mapDispatchToProps = {\r\n    getAllOrders, deleteOrder, printOneOrder, getOrdersPaginated, searchOrders, printSelectedOrders, deleteOrders\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Orders));"],"sourceRoot":""}