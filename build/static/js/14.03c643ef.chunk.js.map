{"version":3,"sources":["pages/customers/Context.jsx","pages/customers/TableItem.jsx","pages/customers/Table.jsx","pages/customers/Customers.jsx","containers/wrapper/Wrapper.jsx","store/actions/customers.jsx"],"names":["Context","createContext","TableItem","id","first_name","last_name","phone","address","city","deleteCustomer","item","useContext","selected","setSelected","history","useHistory","useState","checked","setChecked","threePoints","images","customers","navigate","push","useEffect","deletedCheck","filter","el","length","className","onChange","value","type","onClick","is-responsive","src","i18n","t","Table","items","selectedAll","selectAll","tableArrow","selectAllCustomers","useCallback","style","marginRight","map","index","key","mapDispatchToProps","getAllCustomers","searchCustomers","deleteCustomers","connect","allCustomers","deletedCustomer","withRouter","props","setCustomers","filledLeftArrow","unfilledLeftArrow","filledRightArrow","unfilledRightArrow","useForm","register","handleSubmit","window","location","reload","newArray","data","forEach","elem","nextPage","hasNextPage","currentPage","prevPage","hasPrevPage","number","page","Provider","Wrapper","onSubmit","search","name","ref","required","placeholder","lastPage","is-active","disabled","children","limit","dispatch","a","axios","get","status","GET_ALL_CUSTOMERS","TOGGLE_ERROR_MODAL","message","Promise","reject","text","post","success","SEARCH_CUSTOMERS","getCustomer","GET_SELECTED_CUSTOMERS","code","IS_LOGGED_IN","localStorage","removeItem","defaults","headers","common","getRecentCustomers","GET_RECENT_CUSTOMERS","delete","client_ids","query"],"mappings":"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","file":"static/js/14.03c643ef.chunk.js","sourcesContent":["import React, {createContext} from 'react';\n\nconst Context = createContext(null);\n\nexport default Context;","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport images from '../../assets/images';\nimport i18n from '../../services/locales/i18n';\nimport './customers.scss';\nimport Context from './Context';\n\nconst TableItem = ({ id, first_name, last_name, phone, address, city, deleteCustomer, item }) => {\n    const { selected, setSelected } = useContext(Context);\n    const history = useHistory()\n    const [checked, setChecked] = useState(item.checked);\n    const { threePoints } = images.customers;\n\n    const deleteClient = () => deleteCustomer(id);\n    const navigate = () => history.push('/customer', { id });\n    const check = () => setChecked(!checked);\n\n    useEffect(() => {\n        if (checked) setSelected([...selected, id])\n        else if (!checked) {\n            const deletedCheck = selected.filter(el => el !== id);\n            setSelected(deletedCheck);\n        }\n    }, [checked]);\n\n    useEffect(() => {\n        const iAmSelected = selected.filter(item => item === id);\n        if (iAmSelected.length === 0) {\n            setChecked(false)\n        } else {\n            setChecked(true)\n        }\n    }, [selected])\n\n    return (\n        <div className=\"strike-customers__table-item\">\n            <div className=\"strike-customers__table-item-container\">\n                <input onChange={check} value={checked} checked={checked} className=\"strike-customers__table-item-container-checkbox\" type=\"checkbox\" />\n                <div onClick={navigate} className=\"strike-customers__table-item-container-text\">{first_name}</div>\n            </div>\n            <div onClick={navigate} className=\"strike-customers__table-item-container\">\n                <div className=\"strike-customers__table-item-container-text\">{last_name}</div>\n            </div>\n            <div is-responsive=\"true\" onClick={navigate} className=\"strike-customers__table-item-container\">\n                <div className=\"strike-customers__table-item-container-text\">{phone}</div>\n            </div>\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-customers__table-item-container\">\n                <div className=\"strike-customers__table-item-container-text\">{address}</div>\n            </div>\n            <div onClick={navigate} className=\"strike-customers__table-item-container centered\">\n                <div className=\"strike-customers__table-item-container-text\">{city}</div>\n            </div>\n            <div is-responsive=\"true\" className=\"strike-customers__table-item-container centered\">\n                <div className=\"dropdown\">\n                    <img className=\"strike-customers__table-item-container-dots\" src={threePoints} />\n                    <div className=\"dropdown-content\">\n                        <div onClick={deleteClient} className=\"dropdown-content-text\">{i18n.t('customers.delete')}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default TableItem;","import React from 'react';\nimport images from '../../assets/images';\nimport i18n from '../../services/locales/i18n';\nimport './customers.scss';\nimport TableItem from './TableItem';\nimport Context from './Context';\nimport { useContext, useCallback } from 'react';\n\nconst Table = ({ items, deleteCustomer }) => {\n    const { selectedAll, selectAll } = useContext(Context);\n    const { tableArrow } = images.customers;\n    const selectAllCustomers = useCallback(() => { selectAll(!selectedAll) }, [selectedAll]);\n    return (\n        <div className=\"strike-customers__table\">\n            <div className=\"strike-customers__table-header\">\n                <div className=\"strike-customers__table-header-item\">\n                    <input style={{marginRight: 15}} type=\"checkbox\" onChange={selectAllCustomers} value={selectedAll} checked={selectedAll} />\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.firstName')}</div>\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\n                </div>\n                <div className=\"strike-customers__table-header-item\">\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.lastName')}</div>\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\n                </div>\n                <div is-responsive=\"true\" className=\"strike-customers__table-header-item\">\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.phone')}</div>\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\n                </div>\n                <div is-responsive=\"true\" className=\"strike-customers__table-header-item\">\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.address')}</div>\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\n                </div>\n                <div className=\"strike-customers__table-header-item centered\">\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.city')}</div>\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\n                </div>\n                <div is-responsive=\"true\" className=\"strike-customers__table-header-item centered\">\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.actions')}</div>\n                </div>\n            </div>\n            {items && items.map((item, index) => {\n                return <TableItem item={item} deleteCustomer={deleteCustomer} key={index} {...item} />\n            })}\n        </div>\n    )\n}\n\nexport default Table;","import React, { useEffect, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Wrapper from '../../containers/wrapper/Wrapper';\nimport images from '../../assets/images';\nimport i18n from '../../services/locales/i18n';\nimport './customers.scss';\nimport { getAllCustomers, deleteCustomer, searchCustomers, deleteCustomers } from '../../store/actions/customers';\nimport { useForm } from \"react-hook-form\";\nimport Context from './Context';\nimport Table from './Table';\n\nconst Customers = (props) => {\n    const [customers, setCustomers] = useState(props.allCustomers);\n    const [selected, setSelected] = useState([]);\n    const [selectedAll, selectAll] = useState(false)\n    const { filledLeftArrow, unfilledLeftArrow, filledRightArrow, unfilledRightArrow } = images.customers;\n\n    const { register, handleSubmit } = useForm();\n    const onSubmit = ({ type, search }) => { props.searchCustomers(type, search) };\n\n    useEffect(() => { props.getAllCustomers(10, 1) }, []);\n    useEffect(() => { if (props.deletedCustomer) { window.location.reload() } }, [props.deletedCustomer])\n    useEffect(() => {\n        setCustomers(props.allCustomers);\n        selectAll(false);\n        setSelected([])\n    }, [props.allCustomers]);\n    useEffect(() => {\n        if (selectedAll) {\n            let newArray = [];\n            customers.data.forEach(elem => {\n                newArray.push(elem.id)\n            })\n            setSelected(newArray)\n        } else { setSelected([]) }\n    }, [selectedAll])\n\n    const deleteSelectedCustomers = () => {\n        props.deleteCustomers(selected);\n        selectAll(false);\n        setSelected([])\n    }\n\n    const nextPage = useCallback(() => { if (customers.hasNextPage) props.getAllCustomers(10, customers.currentPage + 1) }, [customers]);\n    const prevPage = useCallback(() => { if (customers.hasPrevPage) props.getAllCustomers(10, customers.currentPage - 1) }, [customers]);\n    const number = useCallback((page) => { props.getAllCustomers(10, page) }, [customers]);\n    return (\n        <Context.Provider value={{ selected, setSelected, selectedAll, selectAll }}>\n            <Wrapper>\n                <div className=\"strike-customers\">\n                    <div className=\"strike-customers__header\">\n                        <div className=\"strike-customers__header-left\">\n                            <div className=\"strike-customers__header-left-text\">{i18n.t('customers.allCustomers')}</div>\n                        </div>\n                        <div className=\"strike-customers__header-right\">\n                        </div>\n                    </div>\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"strike-customers__search\">\n                        <select name=\"type\" ref={register({ required: true })} className=\"strike-customers__search-select\">\n                            <option value=\"name\">{i18n.t('customers.name')}</option>\n                            <option value=\"phone\">{i18n.t('customers.phone')}</option>\n                            <option value=\"city\">{i18n.t('customers.city')}</option>\n                        </select>\n                        <input name=\"search\" ref={register({ required: true })} placeholder={i18n.t('customers.searchPlaceholder')} className=\"strike-customers__search-input\" />\n                        <button type=\"submit\" className=\"strike-customers__search-button\">{i18n.t('customers.search')}</button>\n                    </form>\n                    <Table deleteCustomer={props.deleteCustomer} items={customers.data} />\n                    <div className=\"strike-customers__pagination\">\n                        <img onClick={prevPage} src={customers.hasPrevPage ? filledLeftArrow : unfilledLeftArrow} className='strike-customers__pagination-leftarrow' />\n                        {customers && customers.lastPage.map(item => {\n                            return <div onClick={() => number(item)} is-active={item === customers.currentPage ? 'true' : 'false'} key={item} className=\"strike-customers__pagination-number\">{item}</div>\n                        })}\n                        <img onClick={nextPage} src={customers.hasNextPage ? filledRightArrow : unfilledRightArrow} className='strike-customers__pagination-rightarrow' />\n                    </div>\n                    <button onClick={deleteSelectedCustomers} disabled={selected.length ? false : true} className=\"strike-customers__delete-selected\">{i18n.t('customers.deleteCustomers')}</button>\n                </div>\n            </Wrapper>\n        </Context.Provider>\n    )\n}\n\nconst mapStateToProps = ({ allCustomers, deletedCustomer }) => ({ allCustomers, deletedCustomer });\nconst mapDispatchToProps = { getAllCustomers, deleteCustomer, searchCustomers, deleteCustomers };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Customers));","import React from 'react';\nimport './wrapper.scss';\n\nconst Wrapper = (props) => {\n    return (\n        <div className=\"strike-wrapper\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Wrapper;","//RECENT CUSTOMERS are missing from Postman\nimport {\n    GET_ALL_CUSTOMERS, GET_SELECTED_CUSTOMERS, GET_CUSTOMERS_ORDER, DELETE_CUSTOMER, DELETE_CUSTOMERS, GET_RECENT_CUSTOMERS,\n    IS_LOGGED_IN, SEARCH_CUSTOMERS, TOGGLE_ERROR_MODAL\n} from '../actionTypes';\nimport axios from 'axios';\n\nexport const getAllCustomers = (limit, page) => async (dispatch) => {\n    try {\n        const data = await axios.get(`clients/paginate/${limit}?page=${page}`);\n        if (data.status === 200) {\n            dispatch({ type: GET_ALL_CUSTOMERS, data: data.data })\n        } else {\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\nexport const searchCustomers = (type, text) => async (dispatch) => {\n    try {\n        const { data } = await axios.post(`clients/search/${type}?${type}=${text}`);\n        if (data.success) {\n            dispatch({ type: SEARCH_CUSTOMERS, data: data.data })\n        } else {\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\nexport const getCustomer = (id) => async (dispatch) => {\n    try {\n        const { data } = await axios.get(`/clients/${id}`);\n        if (data.success) {\n            dispatch({ type: GET_SELECTED_CUSTOMERS, data: data.data });\n        } else if (data.code === 403) {\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\nexport const getCustomerOrders = (id) => async (dispatch) => {\n    try {\n        const { data } = await axios.get(`/clients/${id}/order`);\n        if (data.success) {\n            dispatch({ type: GET_CUSTOMERS_ORDER, data });\n        } else if (data.code === 403) {\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\nexport const getRecentCustomers = () => async (dispatch) => {\n    try {\n        const { data } = await axios.get(`/recent/clients`);\n        if (data.success) {\n            dispatch({ type: GET_RECENT_CUSTOMERS, data: data.data });\n        } else if (data.code === 403) {\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\nexport const deleteCustomer = (id) => async (dispatch) => {\n    try {\n        const { data } = await axios.delete(`/clients/${id}`);\n        if (data.success) {\n            window.location.reload();\n        } else if (data.code === 403) {\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}\n\nexport const deleteCustomers = (client_ids) => async (dispatch) => {\n    try {\n        var query = '';\n        client_ids.forEach(item => {\n            if (query === '') query = `client_ids[]=${item}`;\n            else query = `${query}&client_ids[]=${item}`;\n        });\n        const { data } = await axios.delete(`/clients?${query}`);\n        if (data.success) {\n            window.location.reload();\n        } else if (data.code === 403) {\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\n        }\n    } catch (e) {\n        return Promise.reject(e);\n    }\n}"],"sourceRoot":""}