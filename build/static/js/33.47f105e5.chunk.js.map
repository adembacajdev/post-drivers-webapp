{"version":3,"sources":["pages/orders/Orders.jsx","pages/orders/Context.jsx","pages/orders/TableItem.jsx","pages/orders/Table.jsx"],"names":["mapDispatchToProps","getAllOrders","deleteOrder","printOneOrder","getOrdersPaginated","searchOrders","printSelectedOrders","deleteOrders","connect","allOrders","ordersPaginated","deletedOrder","printOrder","withRouter","props","useState","i18n","t","title","setTitle","orders","setOrders","selected","setSelected","selectedAll","selectAll","searchSelect","setSearchSelect","images","filledLeftArrow","unfilledLeftArrow","filledRightArrow","unfilledRightArrow","useForm","register","handleSubmit","errors","useEffect","location","state","window","reload","newArray","data","forEach","elem","push","id","nextPage","useCallback","hasNextPage","currentPage","prevPage","hasPrevPage","number","page","handleSearchSelect","e","target","value","Provider","className","onSubmit","type","search","defaultValue","onChange","name","ref","required","moment","format","placeholder","printOne","deleteItem","items","onClick","src","lastPage","map","item","is-active","key","disabled","length","stringSelected","JSON","stringify","localStorage","setItem","open","host","Context","createContext","TableItem","newStatus","statusColor","serial_number","status","updated_at","price","client","useContext","checked","setChecked","history","useHistory","threePoints","date","time","navigate","deletedCheck","filter","el","is-responsive","first_name","city","Table","selectAllOrders","tableArrow","style","marginLeft","index"],"mappings":"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","file":"static/js/33.47f105e5.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Wrapper from '../../containers/wrapper/Wrapper';\nimport images from '../../assets/images';\nimport i18n from '../../services/locales/i18n';\nimport './orders.scss';\nimport {\n    getAllOrders, deleteOrder, printOneOrder, getOrdersPaginated, searchOrders, printSelectedOrders, deleteOrders\n} from '../../store/actions/orders';\nimport { useForm } from \"react-hook-form\";\nimport Context from './Context';\nimport Table from './Table';\nimport moment from 'moment';\n\nconst Orders = (props) => {\n    const [title, setTitle] = useState(i18n.t('orders.allOrders'));\n    const [orders, setOrders] = useState(props.ordersPaginated);\n    const [selected, setSelected] = useState([]);\n    const [selectedAll, selectAll] = useState(false)\n    const [searchSelect, setSearchSelect] = useState('serial_number');\n    const { filledLeftArrow, unfilledLeftArrow, filledRightArrow, unfilledRightArrow } = images.orders;\n\n    const { register, handleSubmit, errors } = useForm();\n    const onSubmit = ({ type, search }) => { props.searchOrders(type, search); };\n\n    useEffect(() => {\n        props.getOrdersPaginated(10, 1)\n        if (props.location.state && props.location.state.title) setTitle(props.location.state.title);\n    }, [])\n    useEffect(() => { if (props.deletedOrder) window.location.reload() }, [props.deletedOrder])\n    useEffect(() => {\n        setOrders(props.ordersPaginated);\n        selectAll(false);\n        setSelected([])\n    }, [props.ordersPaginated]);\n    useEffect(() => {\n        if (selectedAll) {\n            let newArray = [];\n            orders.data.forEach(elem => {\n                newArray.push(elem.id)\n            })\n            setSelected(newArray)\n        } else {\n            setSelected([])\n        }\n    }, [selectedAll])\n\n    const deleteSelectedOrders = () => {\n        props.deleteOrders(selected);\n        selectAll(false);\n        setSelected([]);\n    }\n    const printSelectedOrd = () => {\n        const stringSelected = JSON.stringify(selected);\n        localStorage.setItem('printMultiple', stringSelected);\n        window.open(`http://${window.location.host}/print/multiple`, 'Print Orders') //this should be https://\n    }\n\n    const nextPage = useCallback(() => { if (orders.hasNextPage) props.getOrdersPaginated(10, orders.currentPage + 1) }, [orders]);\n    const prevPage = useCallback(() => { if (orders.hasPrevPage) props.getOrdersPaginated(10, orders.currentPage - 1) }, [orders]);\n    const number = useCallback((page) => { props.getOrdersPaginated(10, page) }, [orders]);\n\n    const handleSearchSelect = useCallback((e) => { setSearchSelect(e.target.value) }, [searchSelect])\n\n    return (\n        <Context.Provider value={{ selected, setSelected, selectedAll, selectAll }}>\n            <Wrapper>\n                <div className=\"strike-orders\">\n                    <div className=\"strike-orders__header\">\n                        <div className=\"strike-orders__header-left\">\n                            <div className=\"strike-orders__header-left-text\">{title}</div>\n                        </div>\n                        <div className=\"strike-orders__header-right\">\n                        </div>\n                    </div>\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"strike-orders__search\">\n                        <select defaultValue={searchSelect} onChange={handleSearchSelect} name=\"type\" ref={register({ required: true })} className=\"strike-orders__search-select\">\n                            <option value=\"serial_number\">{i18n.t('orders.serialNumber')}</option>\n                            <option value=\"customer_name\">{i18n.t('orders.customerName')}</option>\n                            <option value=\"city\">{i18n.t('orders.city')}</option>\n                            <option value=\"status\">{i18n.t('orders.status')}</option>\n                            <option value=\"date\">{i18n.t('orders.date')}</option>\n                        </select>\n                        <input defaultValue={searchSelect === 'date' ? moment().format('yyyy-MM-DD') : ''} type={searchSelect === 'date' ? 'date' : 'text'} name=\"search\" ref={register({ required: true })} placeholder={i18n.t('orders.searchPlaceholder')} className=\"strike-orders__search-input\" />\n                        <button type=\"submit\" className=\"strike-orders__search-button\">{i18n.t('orders.search')}</button>\n                    </form>\n                    <Table printOne={props.printOneOrder} deleteItem={props.deleteOrder} items={orders && orders.data} />\n                    <div className=\"strike-orders__pagination\">\n                        <img onClick={prevPage} src={orders.hasPrevPage ? filledLeftArrow : unfilledLeftArrow} className='strike-orders__pagination-leftarrow' />\n                        {orders && orders.lastPage.map(item => {\n                            return <div onClick={() => number(item)} is-active={item === orders.currentPage ? 'true' : 'false'} key={item} className=\"strike-orders__pagination-number\">{item}</div>\n                        })}\n                        <img onClick={nextPage} src={orders.hasNextPage ? filledRightArrow : unfilledRightArrow} className='strike-orders__pagination-rightarrow' />\n                    </div>\n                    <div className=\"strike-orders__footerbuttons\">\n                        <button onClick={deleteSelectedOrders} disabled={selected.length ? false : true} className=\"strike-orders__delete-selected\">{i18n.t('orders.deleteOrders')}</button>\n                        <button onClick={printSelectedOrd} disabled={selected.length ? false : true} className=\"strike-orders__print-selected\">{i18n.t('orders.printSelected')}</button>\n                    </div>\n                </div>\n            </Wrapper>\n        </Context.Provider>\n    )\n}\n\nconst mapStateToProps = ({\n    allOrders, ordersPaginated, deletedOrder, printOrder\n}) => ({\n    allOrders, ordersPaginated, deletedOrder, printOrder\n});\nconst mapDispatchToProps = {\n    getAllOrders, deleteOrder, printOneOrder, getOrdersPaginated, searchOrders, printSelectedOrders, deleteOrders\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Orders));","import React,{createContext} from 'react';\n\nconst Context = createContext(null);\n\nexport default Context;","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport images from '../../assets/images';\nimport i18n from '../../services/locales/i18n';\nimport './orders.scss';\nimport moment from 'moment';\nimport Context from './Context';\n\nconst TableItem = ({ id, serial_number, status, updated_at, deleteItem, price, client, printOne, item }) => {\n    const { selected, setSelected } = useContext(Context);\n    const [checked, setChecked] = useState(false)\n    const history = useHistory();\n    const { threePoints } = images.orders;\n    const date = moment(updated_at).format('DD/MM/YYYY');\n    const time = moment(updated_at).format('HH:mm:ss');\n\n    let newStatus;\n    let statusColor;\n    switch (status) {\n        case 'pending':\n            newStatus = status;\n            statusColor = status;\n            break;\n        case 'ongoing':\n            newStatus = status;\n            statusColor = status;\n            break;\n        case 'cancelled':\n            newStatus = status;\n            statusColor = status;\n            break;\n        case 'completed':\n            newStatus = status;\n            statusColor = status;\n            break;\n        case 'archived':\n            newStatus = 'archived';\n            statusColor = 'archived';\n            break;\n        case 'archived:cancelled':\n            newStatus = 'cancelled';\n            statusColor = 'archived';\n            break;\n        case 'archived:completed':\n            newStatus = 'completed';\n            statusColor = 'archived';\n            break;\n    }\n\n    const deleteThisItem = () => deleteItem(id);\n    const navigate = () => history.push('/order', { id })\n    const printOrder = () => {\n        localStorage.setItem('printOne', id)\n        window.open(`http://${window.location.host}/print/one`, 'Print Orders') //this should be https://\n    };\n    const check = () => setChecked(!checked);\n    useEffect(() => {\n        if (checked) setSelected([...selected, id])\n        else if (!checked) {\n            const deletedCheck = selected.filter(el => el !== id);\n            setSelected(deletedCheck);\n        }\n    }, [checked]);\n\n    useEffect(() => {\n        const iAmSelected = selected.filter(item => item === id);\n        if (iAmSelected.length === 0) { setChecked(false) }\n        else { setChecked(true) }\n    }, [selected])\n    return (\n        <div className=\"strike-orders__table-item\">\n            <div className=\"strike-orders__table-item-container\">\n                <input onChange={check} value={checked} checked={checked} className=\"strike-orders__table-item-container-checkbox\" type=\"checkbox\" />\n                <div className=\"strike-orders__table-item-container-text\">{serial_number}</div>\n            </div>\n            <div onClick={navigate} className=\"strike-orders__table-item-container\">\n                <div className={statusColor} />\n                <div className=\"strike-orders__table-item-container-text\">{newStatus}</div>\n            </div>\n            <div onClick={navigate} className=\"strike-orders__table-item-container\">\n                <div className=\"strike-orders__table-item-container-text\">{price}€</div>\n            </div>\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-orders__table-item-container\">\n                <div className=\"strike-orders__table-item-container-text\">{date}</div>\n            </div>\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-orders__table-item-container\">\n                <div className=\"strike-orders__table-item-container-text\">{time}</div>\n            </div>\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-orders__table-item-container\">\n                <div className=\"strike-orders__table-item-container-text\">{client.first_name}</div>\n            </div>\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-orders__table-item-container centered\">\n                <div className=\"strike-orders__table-item-container-text\">{client.city}</div>\n            </div>\n            <div is-responsive=\"true\" className=\"strike-orders__table-item-container centered\">\n                <div className=\"dropdown\">\n                    <img className=\"strike-orders__table-item-container-dots\" src={threePoints} />\n                    <div className=\"dropdown-content\">\n                        <div onClick={printOrder} className=\"dropdown-content-text\">{i18n.t('orders.print')}</div>\n                        <div onClick={deleteThisItem} className=\"dropdown-content-text\">{i18n.t('orders.delete')}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TableItem;","import React from 'react';\nimport images from '../../assets/images';\nimport i18n from '../../services/locales/i18n';\nimport './orders.scss';\nimport TableItem from './TableItem';\nimport Context from './Context';\nimport { useContext, useCallback } from 'react';\n\nconst Table = ({ items, deleteItem, printOne }) => {\n    const { selectedAll, selectAll } = useContext(Context);\n    const { tableArrow } = images.orders;\n    const selectAllOrders = useCallback(() => { selectAll(!selectedAll) }, [selectedAll]);\n    return (\n        <div className=\"strike-orders__table\">\n            <div className=\"strike-orders__table-header\">\n                <div className=\"strike-orders__table-header-item\">\n                    <input type=\"checkbox\" onChange={selectAllOrders} value={selectedAll} checked={selectedAll} />\n                    <div style={{marginLeft: 15}} className=\"strike-orders__table-header-item-text\">{i18n.t('orders.serialNumber')}</div>\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\n                </div>\n                <div className=\"strike-orders__table-header-item\">\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.status')}</div>\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\n                </div>\n                <div className=\"strike-orders__table-header-item\">\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.unitedPrice')}</div>\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\n                </div>\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item\">\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.date')}</div>\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\n                </div>\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item\">\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.time')}</div>\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\n                </div>\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item\">\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.customerName')}</div>\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\n                </div>\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item centered\">\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.city')}</div>\n                    {/* <img className=\"strike-orders__table-header-item-icon\" src={tableArrow} /> */}\n                </div>\n                <div is-responsive=\"true\" className=\"strike-orders__table-header-item centered\">\n                    <div className=\"strike-orders__table-header-item-text\">{i18n.t('orders.actions')}</div>\n                </div>\n            </div>\n            {items && items.map((item, index) => {\n                return <TableItem item={item} printOne={printOne} deleteItem={deleteItem} {...item} key={index} />\n            })}\n        </div>\n    )\n}\n\nexport default Table"],"sourceRoot":""}