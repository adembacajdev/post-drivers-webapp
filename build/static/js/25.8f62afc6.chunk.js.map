{"version":3,"sources":["containers/wrapper/Wrapper.jsx","pages/statistics/Statistics.jsx","store/actions/statistics.jsx"],"names":["Wrapper","props","className","children","defaults","global","maintainAspectRatio","mapDispatchToProps","getDailyEarnings","month","dispatch","a","uri","axios","get","data","success","type","GET_DAILY_EARNINGS","code","IS_LOGGED_IN","localStorage","removeItem","headers","common","TOGGLE_ERROR_MODAL","error","response","status","LOG_OUT","CLEAR_NOTIFICATION","clear","Promise","reject","getDailyOrders","GET_DAILY_ORDERS","getDailyCities","GET_CITIES_STATISTICS","connect","dailyEarnings","dailyOrders","dailyCities","withRouter","useEffect","i18n","t","onChange","e","target","value","height","options"],"mappings":"yGAAA,2BAWeA,IARC,SAACC,GACb,OACI,yBAAKC,UAAU,kBACVD,EAAME,Y,2MCGnBC,IAASC,OAAOC,qBAAsB,EAEtC,IA4EMC,EAAqB,CAAEC,iBCpFG,SAACC,GAAD,8CAAW,WAAOC,GAAP,qBAAAC,EAAA,sEAE/BC,EAAM,GACAA,EAAPH,EAAU,sCAAkCA,GACpC,uBAJwB,SAKZI,IAAMC,IAAIF,GALE,iBAK3BG,EAL2B,EAK3BA,MACCC,QACLN,EAAS,CAAEO,KAAMC,IAAoBH,KAAMA,EAAKA,OAC7B,MAAdA,EAAKI,MACVT,EAAS,CAAEO,KAAMG,IAAcL,MAAM,IACrCM,aAAaC,WAAW,SACxBT,IAAMT,SAASmB,QAAQC,OAAO,gBAAkB,kBAChDX,IAAMT,SAASmB,QAAQC,OAAvB,kBAEAd,EAAS,CAAEO,KAAMQ,KAAoBV,KAAMA,EAAKW,QAdjB,yDAiBP,OAAxB,2CAAGC,gBAAH,eAAaC,UACblB,EAAS,CAAEO,KAAMY,MACjBnB,EAAS,CAAEO,KAAMG,IAAcL,MAAM,IACrCL,EAAS,CAAEO,KAAMa,MACjBT,aAAaU,SArBkB,kBAuB5BC,QAAQC,OAAR,OAvB4B,0DAAX,uDDoFeC,eCzDjB,SAACzB,GAAD,8CAAW,WAAOC,GAAP,qBAAAC,EAAA,sEAE7BC,EAAM,GACAA,EAAPH,EAAU,oCAAgCA,GAClC,qBAJsB,SAKVI,IAAMC,IAAIF,GALA,iBAKzBG,EALyB,EAKzBA,MACCC,QACLN,EAAS,CAAEO,KAAMkB,IAAkBpB,KAAMA,EAAKA,OAC3B,MAAdA,EAAKI,MACVT,EAAS,CAAEO,KAAMG,IAAcL,MAAM,IACrCM,aAAaC,WAAW,SACxBT,IAAMT,SAASmB,QAAQC,OAAO,gBAAkB,kBAChDX,IAAMT,SAASmB,QAAQC,OAAvB,kBAEAd,EAAS,CAAEO,KAAMQ,KAAoBV,KAAMA,EAAKW,QAdnB,yDAiBL,OAAxB,2CAAGC,gBAAH,eAAaC,UACblB,EAAS,CAAEO,KAAMY,MACjBnB,EAAS,CAAEO,KAAMG,IAAcL,MAAM,IACrCL,EAAS,CAAEO,KAAMa,MACjBT,aAAaU,SArBgB,kBAuB1BC,QAAQC,OAAR,OAvB0B,0DAAX,uDDyDiCG,eC9BjC,yDAAM,WAAO1B,GAAP,mBAAAC,EAAA,+EAELE,IAAMC,IAAI,sBAFL,iBAEpBC,EAFoB,EAEpBA,MACCC,QACLN,EAAS,CAAEO,KAAMoB,IAAuBtB,KAAMA,EAAKA,OAChC,MAAdA,EAAKI,MACVT,EAAS,CAAEO,KAAMG,IAAcL,MAAM,IACrCM,aAAaC,WAAW,SACxBT,IAAMT,SAASmB,QAAQC,OAAO,gBAAkB,kBAChDX,IAAMT,SAASmB,QAAQC,OAAvB,kBAEAd,EAAS,CAAEO,KAAMQ,KAAoBV,KAAMA,EAAKW,QAXxB,uDAcA,OAAxB,2CAAGC,gBAAH,eAAaC,UACblB,EAAS,CAAEO,KAAMY,MACjBnB,EAAS,CAAEO,KAAMG,IAAcL,MAAM,IACrCL,EAAS,CAAEO,KAAMa,MACjBT,aAAaU,SAlBW,kBAoBrBC,QAAQC,OAAR,OApBqB,yDAAN,wDDgCfK,uBAHS,SAAC,GAAD,MAAkD,CAAEC,cAApD,EAAGA,cAAgEC,YAAnE,EAAkBA,YAA8DC,YAAhF,EAA+BA,eAGflC,EAAzB+B,CAA6CI,aA9EzC,SAACzC,GAChB0C,qBAAU,WACN1C,EAAMO,mBACNP,EAAMiC,iBACNjC,EAAMmC,mBACP,IAWH,OACI,kBAACpC,EAAA,EAAD,KACI,yBAAKE,UAAU,qBACX,yBAAKA,UAAU,6BAA6B0C,IAAKC,EAAE,qBACnD,yBAAK3C,UAAU,4BACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,6CAA6C0C,IAAKC,EAAE,wBAEvE,yBAAK3C,UAAU,yCACX,4BAAQ4C,SAnBJ,SAACC,GACH,MAAnBA,EAAEC,OAAOC,MAAehD,EAAMO,iBAAiBuC,EAAEC,OAAOC,OACtDhD,EAAMO,qBAkBa,4BAAQyC,MAAO,GAAIL,IAAKC,EAAE,iCAC1B,4BAAQI,MAAO,GAAIL,IAAKC,EAAE,wBAC1B,4BAAQI,MAAO,GAAIL,IAAKC,EAAE,2BAC1B,4BAAQI,MAAO,GAAIL,IAAKC,EAAE,yBAC1B,4BAAQI,MAAO,IAAKL,IAAKC,EAAE,0BAIvC,6BAAS3C,UAAU,iCACf,kBAAC,IAAD,CAAMgD,OAAQ,GAAInC,KAAMd,EAAMsC,eAAiBtC,EAAMsC,cAAcxB,KAAMoC,QAASlD,EAAMsC,eAAiBtC,EAAMsC,cAAcY,YAGrI,yBAAKjD,UAAU,4BACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,6CAA6C0C,IAAKC,EAAE,uBAEvE,yBAAK3C,UAAU,yCACX,4BAAQ4C,SAlCN,SAACC,GACD,MAAnBA,EAAEC,OAAOC,MAAehD,EAAMiC,eAAea,EAAEC,OAAOC,OACpDhD,EAAMiC,mBAiCa,4BAAQe,MAAO,GAAIL,IAAKC,EAAE,iCAC1B,4BAAQI,MAAO,GAAIL,IAAKC,EAAE,wBAC1B,4BAAQI,MAAO,GAAIL,IAAKC,EAAE,2BAC1B,4BAAQI,MAAO,GAAIL,IAAKC,EAAE,yBAC1B,4BAAQI,MAAO,IAAKL,IAAKC,EAAE,0BAIvC,yBAAK3C,UAAU,iCACX,kBAAC,IAAD,CAAMgD,OAAQ,GAAInC,KAAMd,EAAMuC,aAAevC,EAAMuC,YAAYzB,KAAMoC,QAASlD,EAAMuC,aAAevC,EAAMuC,YAAYW,YAG7H,yBAAKjD,UAAU,4BACX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,wCACX,yBAAKA,UAAU,6CAA6C0C,IAAKC,EAAE,uBAEvE,yBAAK3C,UAAU,2CAGnB,yBAAKA,UAAU,iCACX,kBAAC,IAAD,CAAKgD,OAAQ,GAAInC,KAAMd,EAAMwC,aAAexC,EAAMwC,YAAY1B,KAAMoC,QAASlD,EAAMwC,aAAexC,EAAMwC,YAAYU","file":"static/js/25.8f62afc6.chunk.js","sourcesContent":["import React from 'react';\nimport './wrapper.scss';\n\nconst Wrapper = (props) => {\n    return (\n        <div className=\"strike-wrapper\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Wrapper;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Wrapper from '../../containers/wrapper/Wrapper';\nimport i18n from '../../services/locales/i18n';\nimport './statistics.scss';\nimport { getDailyEarnings, getDailyOrders, getDailyCities } from '../../store/actions/statistics';\nimport { Line, Bar, defaults } from 'react-chartjs-2';\n\ndefaults.global.maintainAspectRatio = false;\n\nconst Statistics = (props) => {\n    useEffect(() => {\n        props.getDailyEarnings();\n        props.getDailyOrders();\n        props.getDailyCities();\n    }, []);\n\n    const handleEarningsMonth = (e) => { \n        if(e.target.value !== '0') props.getDailyEarnings(e.target.value);\n        else props.getDailyEarnings();\n     };\n    const handleOrdersMonth = (e) => { \n        if(e.target.value !== '0') props.getDailyOrders(e.target.value);\n        else props.getDailyOrders();\n     };\n\n    return (\n        <Wrapper>\n            <div className=\"strike-statistics\">\n                <div className=\"strike-statistics__header\">{i18n.t('statistics.title')}</div>\n                <div className=\"strike-statistics__chart\">\n                    <div className=\"strike-statistics__chart-header\">\n                        <div className=\"strike-statistics__chart-header-left\">\n                            <div className=\"strike-statistics__chart-header-left-text\">{i18n.t('statistics.earning')}</div>\n                        </div>\n                        <div className=\"strike-statistics__chart-header-right\">\n                            <select onChange={handleEarningsMonth}>\n                                <option value={0}>{i18n.t('statistics.selectPlaceholder')}</option>\n                                <option value={1}>{i18n.t('statistics.oneMonth')}</option>\n                                <option value={3}>{i18n.t('statistics.threeMonths')}</option>\n                                <option value={6}>{i18n.t('statistics.sixMonths')}</option>\n                                <option value={12}>{i18n.t('statistics.oneYear')}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <article className=\"strike-statistics__chart-body\">\n                        <Line height={90} data={props.dailyEarnings && props.dailyEarnings.data} options={props.dailyEarnings && props.dailyEarnings.options} />\n                    </article>\n                </div>\n                <div className=\"strike-statistics__chart\">\n                    <div className=\"strike-statistics__chart-header\">\n                        <div className=\"strike-statistics__chart-header-left\">\n                            <div className=\"strike-statistics__chart-header-left-text\">{i18n.t('statistics.orders')}</div>\n                        </div>\n                        <div className=\"strike-statistics__chart-header-right\">\n                            <select onChange={handleOrdersMonth}>\n                                <option value={0}>{i18n.t('statistics.selectPlaceholder')}</option>\n                                <option value={1}>{i18n.t('statistics.oneMonth')}</option>\n                                <option value={3}>{i18n.t('statistics.threeMonths')}</option>\n                                <option value={6}>{i18n.t('statistics.sixMonths')}</option>\n                                <option value={12}>{i18n.t('statistics.oneYear')}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"strike-statistics__chart-body\">\n                        <Line height={90} data={props.dailyOrders && props.dailyOrders.data} options={props.dailyOrders && props.dailyOrders.options} />\n                    </div>\n                </div>\n                <div className=\"strike-statistics__chart\">\n                    <div className=\"strike-statistics__chart-header\">\n                        <div className=\"strike-statistics__chart-header-left\">\n                            <div className=\"strike-statistics__chart-header-left-text\">{i18n.t('statistics.cities')}</div>\n                        </div>\n                        <div className=\"strike-statistics__chart-header-right\">\n                        </div>\n                    </div>\n                    <div className=\"strike-statistics__chart-body\">\n                        <Bar height={90} data={props.dailyCities && props.dailyCities.data} options={props.dailyCities && props.dailyCities.options} />\n                    </div>\n                </div>\n            </div>\n        </Wrapper>\n    )\n}\n\nconst mapStateToProps = ({ dailyEarnings, dailyOrders, dailyCities }) => ({ dailyEarnings, dailyOrders, dailyCities });\nconst mapDispatchToProps = { getDailyEarnings, getDailyOrders, getDailyCities };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Statistics));","import { GET_DAILY_EARNINGS, GET_DAILY_ORDERS, IS_LOGGED_IN, TOGGLE_ERROR_MODAL, GET_CITIES_STATISTICS, LOG_OUT, CLEAR_NOTIFICATION } from '../actionTypes';\nimport axios from 'axios';\n\nexport const getDailyEarnings = (month) => async (dispatch) => {\n    try {\n        let uri = '';\n        if(month) uri = `/statistics/earnings?months=${month}`;\n        else uri = '/statistics/earnings'\n        const { data } = await axios.get(uri);\n        if (data.success) {\n            dispatch({ type: GET_DAILY_EARNINGS, data: data.data });\n        }else if(data.code === 403){\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.error })\n        }\n    } catch (e) {\n        if (e?.response?.status === 401) {\n            dispatch({ type: LOG_OUT });\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            dispatch({ type: CLEAR_NOTIFICATION })\n            localStorage.clear();\n        }\n        return Promise.reject(e);\n    }\n}\n\nexport const getDailyOrders = (month) => async (dispatch) => {\n    try {\n        let uri = '';\n        if(month) uri = `/statistics/orders?months=${month}`;\n        else uri = '/statistics/orders'\n        const { data } = await axios.get(uri);\n        if (data.success) {\n            dispatch({ type: GET_DAILY_ORDERS, data: data.data });\n        }else if(data.code === 403){\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.error })\n        }\n    } catch (e) {\n        if (e?.response?.status === 401) {\n            dispatch({ type: LOG_OUT });\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            dispatch({ type: CLEAR_NOTIFICATION })\n            localStorage.clear();\n        }\n        return Promise.reject(e);\n    }\n}\n\nexport const getDailyCities = () => async (dispatch) => {\n    try {\n        const { data } = await axios.get('/statistics/cities');\n        if (data.success) {\n            dispatch({ type: GET_CITIES_STATISTICS, data: data.data });\n        }else if(data.code === 403){\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            localStorage.removeItem('token');\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\n            axios.defaults.headers.common['Authorization'] = ``\n        }else{\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.error })\n        }\n    } catch (e) {\n        if (e?.response?.status === 401) {\n            dispatch({ type: LOG_OUT });\n            dispatch({ type: IS_LOGGED_IN, data: false });\n            dispatch({ type: CLEAR_NOTIFICATION })\n            localStorage.clear();\n        }\n        return Promise.reject(e);\n    }\n}"],"sourceRoot":""}