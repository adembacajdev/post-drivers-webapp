{"version":3,"sources":["pages/login/Login.jsx"],"names":["mapDispatchToProps","authenticate","login","connect","loggedIn","isLoggedIn","withRouter","logoWithoutText","images","useForm","register","handleSubmit","errors","watch","to","className","src","i18n","t","style","display","flexDirection","onSubmit","email","password","has-error","name","ref","required","type","placeholder"],"mappings":"+HAAA,4FA2CMA,EAAqB,CAAEC,iBAAcC,WAC5BC,uBAFS,SAAC,GAAD,MAA+B,CAAEC,SAAjC,EAAGA,SAAwCC,WAA3C,EAAaA,cAEGL,EAAzBG,CAA6CG,aAjC9C,SAAC,GAAmD,IAAjDJ,EAAgD,EAAhDA,MAA+BG,GAAiB,EAAzCD,SAAyC,EAA/BH,aAA+B,EAAjBI,YACpCE,EAAoBC,IAApBD,gBADqD,EAEXE,cAA1CC,EAFqD,EAErDA,SAAUC,EAF2C,EAE3CA,aAAqBC,GAFsB,EAE7BC,MAF6B,EAEtBD,QAMvC,OACIP,EAEI,kBAAC,IAAD,CAAUS,GAAG,MAEb,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,4BAA4BC,IAAKT,IACpD,yBAAKQ,UAAU,8BAA8BE,IAAKC,EAAE,iBAEpD,yBAAKH,UAAU,wBACX,0BAAMI,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAAYC,SAAUX,GAhBpE,SAAC,GAAyB,IAAvBY,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClBZ,EAAOW,OAAUX,EAAOY,UACzBtB,EAAM,CAAEqB,QAAOC,iBAeH,yBAAKT,UAAU,8BAA8BE,IAAKC,EAAE,qBACpD,2BAAOO,YAAWb,EAAOW,MAAQ,OAAS,QAASG,KAAK,QAAQC,IAAKjB,EAAS,CAAEkB,UAAU,IAASb,UAAU,6BAA6Bc,KAAK,OAAOC,YAAab,IAAKC,EAAE,4BAC1K,yBAAKH,UAAU,8BAA8BE,IAAKC,EAAE,wBACpD,2BAAOO,YAAWb,EAAOY,SAAW,OAAS,QAASE,KAAK,WAAWC,IAAKjB,EAAS,CAAEkB,UAAU,IAASb,UAAU,6BAA6Bc,KAAK,WAAWC,YAAab,IAAKC,EAAE,+BACpL,4BAAQW,KAAK,SAASd,UAAU,+BAA+BE,IAAKC,EAAE","file":"static/js/28.13071295.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { authenticate } from '../../store/actions/authenticate.action';\nimport { login } from '../../store/actions/authorization';\nimport { useForm } from \"react-hook-form\";\nimport i18n from '../../services/locales/i18n';\nimport './login.scss';\nimport images from '../../assets/images';\n\nconst Login = ({ login, loggedIn, authenticate, isLoggedIn }) => {\n    const { logoWithoutText } = images;\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = ({ email, password }) => {\n        if (!errors.email && !errors.password) {\n            login({ email, password })\n        }\n    };\n    return (\n        isLoggedIn\n            ?\n            <Redirect to='/' />\n            :\n            <div className=\"strike-login\">\n                <div className=\"strike-login__header\">\n                    <img className=\"strike-login__header-logo\" src={logoWithoutText} />\n                <div className=\"strike-login__header-title\">{i18n.t('login.title')}</div>\n                </div>\n                <div className=\"strike-login__inputs\">\n                    <form style={{ display: 'flex', flexDirection: 'column' }} onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"strike-login__inputs-label\">{i18n.t('login.emailLabel')}</div>\n                        <input has-error={errors.email ? 'true' : 'false'} name=\"email\" ref={register({ required: true })} className=\"strike-login__inputs-input\" type=\"text\" placeholder={i18n.t('login.emailPlaceholder')} />\n                        <div className=\"strike-login__inputs-label\">{i18n.t('login.passwordLabel')}</div>\n                        <input has-error={errors.password ? \"true\" : 'false'} name=\"password\" ref={register({ required: true })} className=\"strike-login__inputs-input\" type=\"password\" placeholder={i18n.t('login.passwordPlaceholder')} />\n                        <button type=\"submit\" className=\"strike-login__inputs-button\">{i18n.t('login.loginButton')}</button>\n                    </form>\n                </div>\n            </div>\n    )\n}\n\nconst mapStateToProps = ({ loggedIn, isLoggedIn }) => ({ loggedIn, isLoggedIn });\nconst mapDispatchToProps = { authenticate, login };\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));"],"sourceRoot":""}