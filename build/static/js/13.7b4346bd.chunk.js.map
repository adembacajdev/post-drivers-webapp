{"version":3,"sources":["containers/wrapper/Wrapper.jsx","store/actions/customers.jsx","pages/customers/Context.jsx","pages/customers/TableItem.jsx","pages/customers/Table.jsx","pages/customers/Customers.jsx"],"names":["Wrapper","props","className","children","getAllCustomers","limit","page","dispatch","a","axios","get","data","status","type","GET_ALL_CUSTOMERS","TOGGLE_ERROR_MODAL","message","response","LOG_OUT","IS_LOGGED_IN","CLEAR_NOTIFICATION","localStorage","clear","Promise","reject","searchCustomers","text","post","success","SEARCH_CUSTOMERS","getCustomer","id","GET_SELECTED_CUSTOMERS","code","removeItem","defaults","headers","common","getRecentCustomers","GET_RECENT_CUSTOMERS","deleteCustomer","delete","window","location","reload","deleteCustomers","client_ids","query","forEach","item","Context","createContext","TableItem","first_name","last_name","phone","address","city","useContext","selected","setSelected","history","useHistory","useState","checked","setChecked","threePoints","images","customers","navigate","useCallback","push","useEffect","deletedCheck","filter","el","length","onChange","value","onClick","is-responsive","src","i18n","t","Table","items","selectedAll","selectAll","tableArrow","selectAllCustomers","style","marginRight","map","index","key","mapDispatchToProps","connect","allCustomers","deletedCustomer","withRouter","setCustomers","filledLeftArrow","unfilledLeftArrow","filledRightArrow","unfilledRightArrow","useForm","register","handleSubmit","newArray","elem","nextPage","hasNextPage","currentPage","prevPage","hasPrevPage","number","Provider","onSubmit","search","name","ref","required","placeholder","lastPage","is-active","disabled"],"mappings":"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","file":"static/js/13.7b4346bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './wrapper.scss';\r\n\r\nconst Wrapper = (props) => {\r\n    return (\r\n        <div className=\"strike-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","//RECENT CUSTOMERS are missing from Postman\r\nimport {\r\n    GET_ALL_CUSTOMERS, GET_SELECTED_CUSTOMERS, GET_CUSTOMERS_ORDER, DELETE_CUSTOMER, DELETE_CUSTOMERS, GET_RECENT_CUSTOMERS,\r\n    IS_LOGGED_IN, SEARCH_CUSTOMERS, TOGGLE_ERROR_MODAL, LOG_OUT, CLEAR_NOTIFICATION\r\n} from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getAllCustomers = (limit, page) => async (dispatch) => {\r\n    try {\r\n        const data = await axios.get(`clients/paginate/${limit}?page=${page}`);\r\n        if (data.status === 200) {\r\n            dispatch({ type: GET_ALL_CUSTOMERS, data: data.data })\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.status === 401) {\r\n            dispatch({ type: LOG_OUT });\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            dispatch({ type: CLEAR_NOTIFICATION })\r\n            localStorage.clear();\r\n        }\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const searchCustomers = (type, text) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.post(`clients/search/${type}?${type}=${text}`);\r\n        if (data.success) {\r\n            dispatch({ type: SEARCH_CUSTOMERS, data: data.data })\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.status === 401) {\r\n            dispatch({ type: LOG_OUT });\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            dispatch({ type: CLEAR_NOTIFICATION })\r\n            localStorage.clear();\r\n        }\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getCustomer = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/clients/${id}`);\r\n        if (data.success) {\r\n            dispatch({ type: GET_SELECTED_CUSTOMERS, data: data.data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        }else{\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.status === 401) {\r\n            dispatch({ type: LOG_OUT });\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            dispatch({ type: CLEAR_NOTIFICATION })\r\n            localStorage.clear();\r\n        }\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getCustomerOrders = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/clients/${id}/order`);\r\n        if (data.success) {\r\n            dispatch({ type: GET_CUSTOMERS_ORDER, data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        }else{\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.status === 401) {\r\n            dispatch({ type: LOG_OUT });\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            dispatch({ type: CLEAR_NOTIFICATION })\r\n            localStorage.clear();\r\n        }\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getRecentCustomers = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/recent/clients`);\r\n        if (data.success) {\r\n            dispatch({ type: GET_RECENT_CUSTOMERS, data: data.data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        }else{\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.status === 401) {\r\n            dispatch({ type: LOG_OUT });\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            dispatch({ type: CLEAR_NOTIFICATION })\r\n            localStorage.clear();\r\n        }\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const deleteCustomer = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.delete(`/clients/${id}`);\r\n        if (data.success) {\r\n            window.location.reload();\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        }else{\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.status === 401) {\r\n            dispatch({ type: LOG_OUT });\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            dispatch({ type: CLEAR_NOTIFICATION })\r\n            localStorage.clear();\r\n        }\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const deleteCustomers = (client_ids) => async (dispatch) => {\r\n    try {\r\n        var query = '';\r\n        client_ids.forEach(item => {\r\n            if (query === '') query = `client_ids[]=${item}`;\r\n            else query = `${query}&client_ids[]=${item}`;\r\n        });\r\n        const { data } = await axios.delete(`/clients?${query}`);\r\n        if (data.success) {\r\n            window.location.reload();\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        }else{\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.status === 401) {\r\n            dispatch({ type: LOG_OUT });\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            dispatch({ type: CLEAR_NOTIFICATION })\r\n            localStorage.clear();\r\n        }\r\n        return Promise.reject(e);\r\n    }\r\n}","import React, {createContext} from 'react';\r\n\r\nconst Context = createContext(null);\r\n\r\nexport default Context;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport images from '../../assets/images';\r\nimport i18n from '../../services/locales/i18n';\r\nimport './customers.scss';\r\nimport Context from './Context';\r\nimport { useCallback } from 'react';\r\n\r\nconst TableItem = ({ id, first_name, last_name, phone, address, city, deleteCustomer, item }) => {\r\n    const { selected, setSelected } = useContext(Context);\r\n    const history = useHistory()\r\n    const [checked, setChecked] = useState(item.checked);\r\n    const { threePoints } = images.customers;\r\n\r\n    const deleteClient = () => deleteCustomer(id);\r\n    const navigate = useCallback(() => { history.push('/customer', { id }) }, [item.id])\r\n    const check = () => setChecked(!checked);\r\n\r\n    useEffect(() => {\r\n        if (checked) setSelected([...selected, id])\r\n        else if (!checked) {\r\n            const deletedCheck = selected.filter(el => el !== id);\r\n            setSelected(deletedCheck);\r\n        }\r\n    }, [checked]);\r\n\r\n    useEffect(() => {\r\n        const iAmSelected = selected.filter(item => item === id);\r\n        if (iAmSelected.length === 0) {\r\n            setChecked(false)\r\n        } else {\r\n            setChecked(true)\r\n        }\r\n    }, [selected])\r\n\r\n    return (\r\n        <div className=\"strike-customers__table-item\">\r\n            <div className=\"strike-customers__table-item-container\">\r\n                <input onChange={check} value={checked} checked={checked} className=\"strike-customers__table-item-container-checkbox\" type=\"checkbox\" />\r\n                <div onClick={navigate} className=\"strike-customers__table-item-container-text\">{first_name}</div>\r\n            </div>\r\n            <div onClick={navigate} className=\"strike-customers__table-item-container\">\r\n                <div className=\"strike-customers__table-item-container-text\">{last_name}</div>\r\n            </div>\r\n            <div is-responsive=\"true\" onClick={navigate} className=\"strike-customers__table-item-container\">\r\n                <div className=\"strike-customers__table-item-container-text\">{phone}</div>\r\n            </div>\r\n            <div onClick={navigate} is-responsive=\"true\" className=\"strike-customers__table-item-container\">\r\n                <div className=\"strike-customers__table-item-container-text\">{address}</div>\r\n            </div>\r\n            <div onClick={navigate} className=\"strike-customers__table-item-container centered\">\r\n                <div className=\"strike-customers__table-item-container-text\">{city}</div>\r\n            </div>\r\n            <div is-responsive=\"true\" className=\"strike-customers__table-item-container centered\">\r\n                <div className=\"dropdown\">\r\n                    <img className=\"strike-customers__table-item-container-dots\" src={threePoints} />\r\n                    <div className=\"dropdown-content\">\r\n                        <div onClick={deleteClient} className=\"dropdown-content-text\">{i18n.t('customers.delete')}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableItem;","import React from 'react';\r\nimport images from '../../assets/images';\r\nimport i18n from '../../services/locales/i18n';\r\nimport './customers.scss';\r\nimport TableItem from './TableItem';\r\nimport Context from './Context';\r\nimport { useContext, useCallback } from 'react';\r\n\r\nconst Table = ({ items, deleteCustomer }) => {\r\n    const { selectedAll, selectAll } = useContext(Context);\r\n    const { tableArrow } = images.customers;\r\n    const selectAllCustomers = useCallback(() => { selectAll(!selectedAll) }, [selectedAll]);\r\n    return (\r\n        <div className=\"strike-customers__table\">\r\n            <div className=\"strike-customers__table-header\">\r\n                <div className=\"strike-customers__table-header-item\">\r\n                    <input style={{marginRight: 15}} type=\"checkbox\" onChange={selectAllCustomers} value={selectedAll} checked={selectedAll} />\r\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.firstName')}</div>\r\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\r\n                </div>\r\n                <div className=\"strike-customers__table-header-item\">\r\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.lastName')}</div>\r\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\r\n                </div>\r\n                <div is-responsive=\"true\" className=\"strike-customers__table-header-item\">\r\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.phone')}</div>\r\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\r\n                </div>\r\n                <div is-responsive=\"true\" className=\"strike-customers__table-header-item\">\r\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.address')}</div>\r\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\r\n                </div>\r\n                <div className=\"strike-customers__table-header-item centered\">\r\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.city')}</div>\r\n                    <img className=\"strike-customers__table-header-item-icon responsive\" src={tableArrow} />\r\n                </div>\r\n                <div is-responsive=\"true\" className=\"strike-customers__table-header-item centered\">\r\n                    <div className=\"strike-customers__table-header-item-text\">{i18n.t('customers.actions')}</div>\r\n                </div>\r\n            </div>\r\n            {items && items.map((item, index) => {\r\n                return <TableItem item={item} deleteCustomer={deleteCustomer} key={index} {...item} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Wrapper from '../../containers/wrapper/Wrapper';\r\nimport images from '../../assets/images';\r\nimport i18n from '../../services/locales/i18n';\r\nimport './customers.scss';\r\nimport { getAllCustomers, deleteCustomer, searchCustomers, deleteCustomers } from '../../store/actions/customers';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Context from './Context';\r\nimport Table from './Table';\r\n\r\nconst Customers = (props) => {\r\n    const [customers, setCustomers] = useState(props.allCustomers);\r\n    const [selected, setSelected] = useState([]);\r\n    const [selectedAll, selectAll] = useState(false)\r\n    const { filledLeftArrow, unfilledLeftArrow, filledRightArrow, unfilledRightArrow } = images.customers;\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = ({ type, search }) => { props.searchCustomers(type, search) };\r\n\r\n    useEffect(() => { props.getAllCustomers(10, 1) }, []);\r\n    useEffect(() => { if (props.deletedCustomer) { window.location.reload() } }, [props.deletedCustomer])\r\n    useEffect(() => {\r\n        setCustomers(props.allCustomers);\r\n        selectAll(false);\r\n        setSelected([])\r\n    }, [props.allCustomers]);\r\n    useEffect(() => {\r\n        if (selectedAll) {\r\n            let newArray = [];\r\n            customers.data.forEach(elem => {\r\n                newArray.push(elem.id)\r\n            })\r\n            setSelected(newArray)\r\n        } else { setSelected([]) }\r\n    }, [selectedAll])\r\n\r\n    const deleteSelectedCustomers = () => {\r\n        props.deleteCustomers(selected);\r\n        selectAll(false);\r\n        setSelected([])\r\n    }\r\n\r\n    const nextPage = useCallback(() => { if (customers.hasNextPage) props.getAllCustomers(10, customers.currentPage + 1) }, [customers]);\r\n    const prevPage = useCallback(() => { if (customers.hasPrevPage) props.getAllCustomers(10, customers.currentPage - 1) }, [customers]);\r\n    const number = useCallback((page) => { props.getAllCustomers(10, page) }, [customers]);\r\n    return (\r\n        <Context.Provider value={{ selected, setSelected, selectedAll, selectAll }}>\r\n            <Wrapper>\r\n                <div className=\"strike-customers\">\r\n                    <div className=\"strike-customers__header\">\r\n                        <div className=\"strike-customers__header-left\">\r\n                            <div className=\"strike-customers__header-left-text\">{i18n.t('customers.allCustomers')}</div>\r\n                        </div>\r\n                        <div className=\"strike-customers__header-right\">\r\n                        </div>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"strike-customers__search\">\r\n                        <select name=\"type\" ref={register({ required: true })} className=\"strike-customers__search-select\">\r\n                            <option value=\"name\">{i18n.t('customers.name')}</option>\r\n                            <option value=\"phone\">{i18n.t('customers.phone')}</option>\r\n                            <option value=\"city\">{i18n.t('customers.city')}</option>\r\n                        </select>\r\n                        <input name=\"search\" ref={register({ required: true })} placeholder={i18n.t('customers.searchPlaceholder')} className=\"strike-customers__search-input\" />\r\n                        <button type=\"submit\" className=\"strike-customers__search-button\">{i18n.t('customers.search')}</button>\r\n                    </form>\r\n                    <Table deleteCustomer={props.deleteCustomer} items={customers.data} />\r\n                    <div className=\"strike-customers__pagination\">\r\n                        <img onClick={prevPage} src={customers.hasPrevPage ? filledLeftArrow : unfilledLeftArrow} className='strike-customers__pagination-leftarrow' />\r\n                        {customers && customers.lastPage.map(item => {\r\n                            return <div onClick={() => number(item)} is-active={item === customers.currentPage ? 'true' : 'false'} key={item} className=\"strike-customers__pagination-number\">{item}</div>\r\n                        })}\r\n                        <img onClick={nextPage} src={customers.hasNextPage ? filledRightArrow : unfilledRightArrow} className='strike-customers__pagination-rightarrow' />\r\n                    </div>\r\n                    <button onClick={deleteSelectedCustomers} disabled={selected.length ? false : true} className=\"strike-customers__delete-selected\">{i18n.t('customers.deleteCustomers')}</button>\r\n                </div>\r\n            </Wrapper>\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ allCustomers, deletedCustomer }) => ({ allCustomers, deletedCustomer });\r\nconst mapDispatchToProps = { getAllCustomers, deleteCustomer, searchCustomers, deleteCustomers };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Customers));"],"sourceRoot":""}