{"version":3,"sources":["containers/wrapper/Wrapper.jsx","store/actions/orders.jsx"],"names":["Wrapper","props","className","children","getAllOrders","dispatch","a","axios","get","data","success","type","GET_ALL_ORDERS","code","IS_LOGGED_IN","localStorage","removeItem","defaults","headers","common","TOGGLE_ERROR_MODAL","message","Promise","reject","searchOrders","text","url","day","moment","format","month","year","parseInt","post","SEARCH_ORDERS","getOrdersPaginated","limit","page","status","GET_ALL_ORDERS_PAGINATED","getOrder","id","GET_ORDER","getNumberOfOrdersByStatus","NUMBER_OF_ORDERS_BY_STATUS","clear","postOrder","params","TOGGLE_SUCCESS_MODAL","POST_ORDER","error","getOrderByStatus","GET_ORDER_BY_STATUS","getTopCities","GET_TOP_CITIES","getTopProducts","GET_TOP_PRODUCTS","deleteOrder","delete","window","location","reload","deleteOrders","order_ids","query","forEach","item","printOneOrder","PRINT_ONE_ORDER","printSelectedOrders","PRINT_SELECTED_ORDERS","getOrdersInMap","GET_ORDER_IN_MAP"],"mappings":"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","file":"static/js/2.b32d25cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './wrapper.scss';\r\n\r\nconst Wrapper = (props) => {\r\n    return (\r\n        <div className=\"strike-wrapper\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import {\r\n    GET_ALL_ORDERS, GET_ORDER, NUMBER_OF_ORDERS_BY_STATUS, POST_ORDER, GET_ORDERS_BY_CITY, GET_ORDER_BY_STATUS, DELETE_ORDER,\r\n    DELETE_ORDERS, GET_TOP_CITIES, GET_TOP_PRODUCTS, IS_LOGGED_IN, PRINT_ONE_ORDER, GET_ALL_ORDERS_PAGINATED, SEARCH_ORDERS,\r\n    PRINT_SELECTED_ORDERS, TOGGLE_ERROR_MODAL, TOGGLE_SUCCESS_MODAL, GET_ORDER_IN_MAP\r\n} from '../actionTypes';\r\nimport axios from 'axios'\r\nimport config from '../../config';\r\nimport moment from 'moment'\r\n\r\nexport const getAllOrders = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get('/orders');\r\n        if (data.success) {\r\n            dispatch({ type: GET_ALL_ORDERS, data: data.data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const searchOrders = (type, text) => async (dispatch) => {\r\n    try {\r\n        let url = '';\r\n        if (type === 'status') url = `/orders/status?status=${text}`;\r\n        if (type === 'city') url = `/orders/city?city=${text}`;\r\n        if (type === 'serial_number') url = `/orders/serial/number?serial_number=${text}`;\r\n        if (type === 'customer_name') url = `/orders/customer/name?customer_name=${text}`;\r\n        if (type === 'date') {\r\n            const day = moment(text).format('DD');\r\n            const month = moment(text).format('MM');\r\n            const year = moment(text).format('YYYY');\r\n            url = `/orders/date?day=${parseInt(day)}&month=${parseInt(month)}&year=${parseInt(year)}`;\r\n        }\r\n        const { data } = await axios.post(url);\r\n        if (data.success && data.data !== null) {\r\n            dispatch({ type: SEARCH_ORDERS, data: data.data })\r\n        } else if (data.data === null) {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: 'This ID does not exist' })\r\n        }\r\n        else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getOrdersPaginated = (limit, page) => async (dispatch) => {\r\n    try {\r\n        const data = await axios.get(`orders/paginate/${limit}?page=${page}`);\r\n        if (data.status === 200) {\r\n            dispatch({ type: GET_ALL_ORDERS_PAGINATED, data: data.data })\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getOrder = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/orders/${id}`);\r\n        if (data.success) {\r\n            dispatch({ type: GET_ORDER, data: data.data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getNumberOfOrdersByStatus = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/orders/status/count`);\r\n        if (data.success) {\r\n            dispatch({ type: NUMBER_OF_ORDERS_BY_STATUS, data: data.data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            localStorage.clear()\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const postOrder = (params) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.post(`/orders`, params);\r\n        if (data.success) {\r\n            dispatch({ type: TOGGLE_SUCCESS_MODAL, data: 'Porosia u dergua me sukses!' });\r\n            dispatch({ type: POST_ORDER, data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.error })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getOrderByStatus = (status) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.post(`/orders/status`, { status });\r\n        if (data.success) {\r\n            dispatch({ type: GET_ORDER_BY_STATUS, data: data.data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getOrderByCity = (city) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.post(`/orders/${city}`);\r\n        if (data.success) {\r\n            dispatch({ type: GET_ORDERS_BY_CITY, data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getTopCities = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/top/cities`);\r\n        if (data.success) {\r\n            dispatch({ type: GET_TOP_CITIES, data: data.data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            localStorage.clear()\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getTopProducts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(`/top/products`);\r\n        if (data.success) {\r\n            dispatch({ type: GET_TOP_PRODUCTS, data: data.data });\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            localStorage.clear()\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.delete(`/orders/${id}`);\r\n        if (data.success) {\r\n            window.location.reload();\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const deleteOrders = (order_ids, status) => async (dispatch) => {\r\n    try {\r\n        var query = '';\r\n        order_ids.forEach(item => {\r\n            if (query === '') query = `order_ids[]=${item}`;\r\n            else query = `${query}&order_ids[]=${item}`;\r\n        });\r\n        const { data } = await axios.delete(`/orders?${query}`);\r\n        if (data.success) {\r\n            window.location.reload();\r\n        } else if (data.code === 403) {\r\n            dispatch({ type: IS_LOGGED_IN, data: false });\r\n            localStorage.removeItem('token');\r\n            axios.defaults.headers.common['Content-Type'] = \"applicaton/json\"\r\n            axios.defaults.headers.common['Authorization'] = ``\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.message })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const printOneOrder = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.post(`/orders/print?order_id=${id}`,);\r\n        if(data.success){\r\n            dispatch({ type: PRINT_ONE_ORDER, data: [data.data] });\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const printSelectedOrders = (order_ids) => async (dispatch) => {\r\n    var query = '';\r\n    order_ids.forEach(item => {\r\n        if (query === '') query = `order_ids[]=${item}`;\r\n        else query = `${query}&order_ids[]=${item}`;\r\n    });\r\n    try {\r\n        var query = '';\r\n        order_ids.forEach(item => {\r\n            if (query === '') query = `order_ids[]=${item}`;\r\n            else query = `${query}&order_ids[]=${item}`;\r\n        });\r\n        const { data } = await axios.post(`/orders/print/selected?${query}`);\r\n        if (data.success) {\r\n            dispatch({ type: PRINT_SELECTED_ORDERS, data: data.data });\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\nexport const getOrdersInMap = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get('/orders/map');\r\n        if (data.success) {\r\n            dispatch({ type: GET_ORDER_IN_MAP, data: data.data })\r\n        } else {\r\n            dispatch({ type: TOGGLE_ERROR_MODAL, data: data.error })\r\n        }\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}"],"sourceRoot":""}